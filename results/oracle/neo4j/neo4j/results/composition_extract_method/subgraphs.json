[{"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 0, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#lookup(Object)"}, {"id": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)"}, {"id": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#scan()"}], "links": [{"properties": {"id": 0, "entityBeforeFullName": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#lookup(Object)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4", "abbreviatedCommitHash": "b83e6a535", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1119504, "descriptionOracle": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public lookup(value Object) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader", "source": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#lookup(Object)", "target": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "weight": 1}, "source": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#lookup(Object)", "target": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "key": 0}, {"properties": {"id": 1, "entityBeforeFullName": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#scan()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4", "abbreviatedCommitHash": "b83e6a535", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1119504, "descriptionOracle": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader", "source": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#scan()", "target": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "weight": 1}, "source": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#scan()", "target": "org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader#query(Query)", "key": 1}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 1, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.index.impl.lucene.IndexCreationTest#verifyThatIndexCreationTransactionIsTheFirstOne()"}, {"id": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)"}, {"id": "org.neo4j.kernel.impl.transaction.log.PhysicalLogFile#accept(LogHeaderVisitor)"}, {"id": "org.neo4j.kernel.NeoStoreDataSource#buildTransactionLogs(File,Config,LogProvider,LabelScanStore,FileSystemAbstraction,NeoStore,CacheAccessBackDoor,IndexingService,Iterable<IndexImplementation>)"}], "links": [{"properties": {"id": 2, "entityBeforeFullName": "org.neo4j.index.impl.lucene.IndexCreationTest#verifyThatIndexCreationTransactionIsTheFirstOne()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT_MOVE", "commitHash": "001de307492df8f84ad15f6aaa0bd1e748d4ce27", "abbreviatedCommitHash": "001de3074", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1122164, "descriptionOracle": "Extract And Move Method public start(logVersion long) : LogPosition extracted from private verifyThatIndexCreationTransactionIsTheFirstOne() : void in class org.neo4j.index.impl.lucene.IndexCreationTest & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition", "source": "org.neo4j.index.impl.lucene.IndexCreationTest#verifyThatIndexCreationTransactionIsTheFirstOne()", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "weight": 1}, "source": "org.neo4j.index.impl.lucene.IndexCreationTest#verifyThatIndexCreationTransactionIsTheFirstOne()", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "key": 0}, {"properties": {"id": 3, "entityBeforeFullName": "org.neo4j.kernel.impl.transaction.log.PhysicalLogFile#accept(LogHeaderVisitor)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT_MOVE", "commitHash": "001de307492df8f84ad15f6aaa0bd1e748d4ce27", "abbreviatedCommitHash": "001de3074", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1122164, "descriptionOracle": "Extract And Move Method public start(logVersion long) : LogPosition extracted from public accept(visitor LogHeaderVisitor) : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFile & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition", "source": "org.neo4j.kernel.impl.transaction.log.PhysicalLogFile#accept(LogHeaderVisitor)", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "weight": 1}, "source": "org.neo4j.kernel.impl.transaction.log.PhysicalLogFile#accept(LogHeaderVisitor)", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "key": 1}, {"properties": {"id": 4, "entityBeforeFullName": "org.neo4j.kernel.NeoStoreDataSource#buildTransactionLogs(File,Config,LogProvider,LabelScanStore,FileSystemAbstraction,NeoStore,CacheAccessBackDoor,IndexingService,Iterable<IndexImplementation>)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT_MOVE", "commitHash": "001de307492df8f84ad15f6aaa0bd1e748d4ce27", "abbreviatedCommitHash": "001de3074", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1122164, "descriptionOracle": "Extract And Move Method public start(logVersion long) : LogPosition extracted from private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule in class org.neo4j.kernel.NeoStoreDataSource & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition", "source": "org.neo4j.kernel.NeoStoreDataSource#buildTransactionLogs(File,Config,LogProvider,LabelScanStore,FileSystemAbstraction,NeoStore,CacheAccessBackDoor,IndexingService,Iterable<IndexImplementation>)", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "weight": 1}, "source": "org.neo4j.kernel.NeoStoreDataSource#buildTransactionLogs(File,Config,LogProvider,LabelScanStore,FileSystemAbstraction,NeoStore,CacheAccessBackDoor,IndexingService,Iterable<IndexImplementation>)", "target": "org.neo4j.kernel.impl.transaction.log.LogPosition#start(long)", "key": 2}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 2, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#beginTx()"}, {"id": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()"}, {"id": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#execute(String,Map<String,Object>)"}], "links": [{"properties": {"id": 6, "entityBeforeFullName": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#beginTx()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b", "abbreviatedCommitHash": "74d2cc420", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1122167, "descriptionOracle": "Extract Method private checkAvailability() : void extracted from public beginTx() : Transaction in class org.neo4j.kernel.impl.factory.GraphDatabaseFacade", "source": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#beginTx()", "target": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "weight": 1}, "source": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#beginTx()", "target": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "key": 0}, {"properties": {"id": 7, "entityBeforeFullName": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#execute(String,Map<String,Object>)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b", "abbreviatedCommitHash": "74d2cc420", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1122167, "descriptionOracle": "Extract Method private checkAvailability() : void extracted from public execute(query String, parameters Map<String,Object>) : Result in class org.neo4j.kernel.impl.factory.GraphDatabaseFacade", "source": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#execute(String,Map<String,Object>)", "target": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "weight": 1}, "source": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#execute(String,Map<String,Object>)", "target": "org.neo4j.kernel.impl.factory.GraphDatabaseFacade#checkAvailability()", "key": 1}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 3, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenClosingTheDatabase()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenRotatingLog()"}], "links": [{"properties": {"id": 11, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest", "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "key": 0}, {"properties": {"id": 12, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenClosingTheDatabase()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenClosingTheDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest", "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenClosingTheDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenClosingTheDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "key": 1}, {"properties": {"id": 13, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenRotatingLog()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenRotatingLog() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest", "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenRotatingLog()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#shouldRotateCountsStoreWhenRotatingLog()", "target": "org.neo4j.kernel.impl.store.counts.CountsRotationTest#createCountsTracker(PageCache)", "key": 2}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 4, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountStoreWhenDBContainsDenseNodes()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesInTheDB()"}, {"id": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB()"}], "links": [{"properties": {"id": 14, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountStoreWhenDBContainsDenseNodes()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountStoreWhenDBContainsDenseNodes()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountStoreWhenDBContainsDenseNodes()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 0}, {"properties": {"id": 15, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 1}, {"properties": {"id": 16, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 2}, {"properties": {"id": 17, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 3}, {"properties": {"id": 18, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesInTheDB()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreNodesInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 4}, {"properties": {"id": 19, "entityBeforeFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB()", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b", "abbreviatedCommitHash": "5fa74fbb4", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1140032, "descriptionOracle": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest", "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "weight": 1}, "source": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB()", "target": "org.neo4j.kernel.impl.store.counts.CountsComputerTest#createCountsTracker()", "key": 5}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 5, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode1(long,DefinedProperty,DefinedProperty,DefinedProperty)"}, {"id": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)"}, {"id": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode2(long,DefinedProperty,DefinedProperty,DefinedProperty)"}, {"id": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel1(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)"}, {"id": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel2(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)"}], "links": [{"properties": {"id": 21, "entityBeforeFullName": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode1(long,DefinedProperty,DefinedProperty,DefinedProperty)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "021d17c8234904dcb1d54596662352395927fe7b", "abbreviatedCommitHash": "021d17c82", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149799, "descriptionOracle": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore", "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode1(long,DefinedProperty,DefinedProperty,DefinedProperty)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode1(long,DefinedProperty,DefinedProperty,DefinedProperty)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "key": 0}, {"properties": {"id": 22, "entityBeforeFullName": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode2(long,DefinedProperty,DefinedProperty,DefinedProperty)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "021d17c8234904dcb1d54596662352395927fe7b", "abbreviatedCommitHash": "021d17c82", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149799, "descriptionOracle": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore", "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode2(long,DefinedProperty,DefinedProperty,DefinedProperty)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteNode2(long,DefinedProperty,DefinedProperty,DefinedProperty)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "key": 1}, {"properties": {"id": 23, "entityBeforeFullName": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel1(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "021d17c8234904dcb1d54596662352395927fe7b", "abbreviatedCommitHash": "021d17c82", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149799, "descriptionOracle": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel1(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore", "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel1(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel1(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "key": 2}, {"properties": {"id": 24, "entityBeforeFullName": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel2(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT", "commitHash": "021d17c8234904dcb1d54596662352395927fe7b", "abbreviatedCommitHash": "021d17c82", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149799, "descriptionOracle": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel2(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore", "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel2(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "weight": 1}, "source": "org.neo4j.kernel.impl.store.TestNeoStore#deleteRel2(long,DefinedProperty,DefinedProperty,DefinedProperty,long,long,int)", "target": "org.neo4j.kernel.impl.store.TestNeoStore#assertHasRelationships(long)", "key": 3}]}, {"directed": true, "multigraph": true, "graph": {"group": "atomic", "id": 6, "project": "neo4j/neo4j"}, "nodes": [{"id": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower#runIterations(int)"}, {"id": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()"}, {"id": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi#runInternalArnoldi(int)"}], "links": [{"properties": {"id": 26, "entityBeforeFullName": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower#runIterations(int)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT_MOVE", "commitHash": "4712de476aabe69cd762233c9641dd3cf9f8361b", "abbreviatedCommitHash": "4712de476", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149802, "descriptionOracle": "Extract And Move Method protected incrementTotalIterations() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower & moved to class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase", "source": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower#runIterations(int)", "target": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "weight": 1}, "source": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower#runIterations(int)", "target": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "key": 0}, {"properties": {"id": 27, "entityBeforeFullName": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi#runInternalArnoldi(int)", "entityBeforeSimpleName": "", "entityBeforeLocation": "", "entityBeforeParameters": "", "entityBeforeLine": "", "entityBeforeParents": "", "entityAfterFullName": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "entityAfterSimpleName": "", "entityAfterLocation": "", "entityAfterParameters": "", "entityAfterLine": "", "entityAfterParents": "", "refactoringLevel": "MethodDeclaration", "refactoringType": "EXTRACT_MOVE", "commitHash": "4712de476aabe69cd762233c9641dd3cf9f8361b", "abbreviatedCommitHash": "4712de476", "authorName": "", "authorEmail": "", "authorDate": "", "authorDateUnixTimestamp": "", "committerName": "", "committerEmail": "", "committerDate": "", "committerDateUnixTimestamp": "", "idOracle": 1149802, "descriptionOracle": "Extract And Move Method protected incrementTotalIterations() : void extracted from protected runInternalArnoldi(iterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi & moved to class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase", "source": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi#runInternalArnoldi(int)", "target": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "weight": 1}, "source": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi#runInternalArnoldi(int)", "target": "org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase#incrementTotalIterations()", "key": 1}]}]