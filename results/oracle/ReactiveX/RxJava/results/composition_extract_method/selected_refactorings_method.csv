id;entityBeforeFullName;entityBeforeSimpleName;entityBeforeLocation;entityBeforeParameters;entityBeforeLine;entityBeforeParents;entityAfterFullName;entityAfterSimpleName;entityAfterLocation;entityAfterParameters;entityAfterLine;entityAfterParents;refactoringLevel;refactoringType;commitHash;abbreviatedCommitHash;authorName;authorEmail;authorDate;authorDateUnixTimestamp;committerName;committerEmail;committerDate;committerDateUnixTimestamp;idOracle;descriptionOracle
0;rx.observables.BlockingObservable#blockForSingle(Observable<?);;;;;;rx.observables.BlockingObservable#awaitForComplete(CountDownLatch,Subscription);;;;;;MethodDeclaration;EXTRACT;8ad226067434cd39ce493b336bd0659778625959;8ad226067;;;;;;;;;1153435;Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from private blockForSingle(observable Observable<? extends T>) : T in class rx.observables.BlockingObservable
1;rx.observables.BlockingObservable#forEach(Action1<?);;;;;;rx.observables.BlockingObservable#awaitForComplete(CountDownLatch,Subscription);;;;;;MethodDeclaration;EXTRACT;8ad226067434cd39ce493b336bd0659778625959;8ad226067;;;;;;;;;1153435;Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from public forEach(onNext Action1<? super T>) : void in class rx.observables.BlockingObservable
2;rx.observables.BlockingObservableTest.InterruptionTests#assertUnsubscribeIsInvoked(String,Action1<BlockingObservable<Void>>);;;;;;rx.observables.BlockingObservableTest.InterruptionTests#getInterruptedExceptionOrNull();;;;;;MethodDeclaration;EXTRACT;8ad226067434cd39ce493b336bd0659778625959;8ad226067;;;;;;;;;1153435;Extract Method private getInterruptedExceptionOrNull() : InterruptedException extracted from package assertUnsubscribeIsInvoked(method String, blockingAction Action1<BlockingObservable<Void>>) : void in class rx.observables.BlockingObservableTest.InterruptionTests
3;rx.observables.BlockingObservableTest.InterruptionTests#createObservable();;;;;;rx.observables.BlockingObservableTest.InterruptionTests#createOnUnsubscribe();;;;;;MethodDeclaration;EXTRACT;8ad226067434cd39ce493b336bd0659778625959;8ad226067;;;;;;;;;1153435;Extract Method private createOnUnsubscribe() : Action0 extracted from private createObservable() : Observable<Void> in class rx.observables.BlockingObservableTest.InterruptionTests
